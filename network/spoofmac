#!/bin/bash
ifconfig=$(which ifconfig)

if [ `uname` == "Darwin" ]; then
  mackeyword="ether"
  macpar="ether"
else
  mackeyword="HWaddr"
  macpar="hw ether"
fi

file_origin="$HOME/.origin_ifconfig_output.txt"

# input argument check
if [ "$(whoami)" != "root" ]
then
  echo "Run it with root!"
  exit
fi

if [ "$#" -ne 2 ]; then
  echo "Randomly assign a faked mac address to a give interface."
  echo "Usage: sudo spoofmac [interface] [update/restore]"
  exit
fi

# if run the first time then record $ifconfig.
if [ ! -f $file_origin ]
then
    $ifconfig > $file_origin
fi

origin_mac=$(awk "/$1/,0" $file_origin | sed -n -e "s/^.*$mackeyword //p"|sed -n '1p')
old_mac=$($ifconfig $1 | sed -n -e "s/.*$mackeyword //p")
random_mac=$(openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//')

if [ `uname` == "Linux" ]; then
  $ifconfig $1 down
fi


case "$2" in
  "restore") 
    $ifconfig $1 $macpar $origin_mac
    echo "Restore mac address to hardware mac address: ${origin_mac}.";;

  "update") 
    $ifconfig $1 $macpar $random_mac
    echo "spoof: $old_mac ==> $random_mac (hardware: $origin_mac).";;

  *) echo "Argument 2 should be either [restore/update], but I get $2."
esac

$ifconfig $1 up
